service: lambda-starter

plugins:
  - serverless-webpack
  - serverless-domain-manager
  - serverless-offline

custom:
  webpack:
    webpackConfig: 'webpack.config.js'
    includeModules: true
    packager: 'npm'

  customDomain:
    certificateName: ${file(./serverless.env.yml):${self:provider.stage}.CERTIFICATE_NAME}
    domainName: ${file(./serverless.env.yml):${self:provider.stage}.DOMAIN_NAME}
    basePath: 'v1'
    stage: ${self:provider.stage}
    createRoute53Record: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: ${file(./serverless.env.yml):${self:provider.stage}.AWS_REGION}

  profile: ${file(./serverless.env.yml):${self:provider.stage}.SERVERLESS_ADMIN}
  timeout: 30
  environment:
    REGION: ${self:provider.region}
    STAGE: ${self:provider.stage}
    DYNAMO_USERS_TABLE: ${file(./serverless.env.yml):${self:provider.stage}.DYNAMO_USERS_TABLE}
    DYNAMO_CLIENTS_TABLE: ${file(./serverless.env.yml):${self:provider.stage}.DYNAMO_CLIENTS_TABLE}
    JWT_SECRET: ${file(./serverless.env.yml):${self:provider.stage}.JWT_SECRET}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_USERS_TABLE}*'
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMO_CLIENTS_TABLE}*'
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - Fn::Join:
            - ':'
            - - arn:aws:lambda
              - Ref: AWS::Region
              - Ref: AWS::AccountId
              - function:${self:service}-${self:provider.stage}-*
functions:
  createUser: 
    handler: functions/user/createUser.main
    events:
      - http:
          path: /user/create
          method: post
          cors: true

  loginUser:
    handler: functions/user/loginUser.main
    events:
      - http:
          path: /user/login
          method: post
          cors: true
